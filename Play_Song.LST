C51 COMPILER V9.53.0.0   PLAY_SONG                                                         12/15/2015 10:00:52 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE PLAY_SONG
OBJECT MODULE PLACED IN Play_Song.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Play_Song.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include "stdio.h"
   2          #include "main.h"
   3          #include "PORT.H"
   4          #include "SPI.h"
   5          #include "File_System_v2.h"
   6          #include "Read_Sector.h"
   7          #include "Play_Song.h"
   8          #include "SDCard.h"
   9          extern uint8_t xdata buf1[512];
  10          extern uint8_t xdata buf2[512]; 
  11          ///*
  12          void Play_Song(uint32_t Start_Cluster)
  13          {
  14   1         uint16_t index1, index2;
  15   1         uint8_t buffer1, buffer2, temp8;
  16   1         uint32_t sector, sector_offset;
  17   1         printf("Starting Cluster = %lu\n\r",Start_Cluster);
  18   1      
  19   1         sector=First_Sector(Start_Cluster);
  20   1         printf("Starting Sector = %lu\n\r",sector);
  21   1         sector_offset=0;
  22   1         buffer1=1;
  23   1         buffer2=0;
  24   1         //P3_2=ON;
  25   1         YELLOWLED=ON;
  26   1         index1=0;
  27   1         
  28   1         Read_Sector(sector+sector_offset, 512, buf1);
  29   1      
  30   1         sector_offset++;
  31   1         YELLOWLED=OFF;
  32   1         AMBERLED=ON;
  33   1         index2=0;
  34   1         
  35   1         Read_Sector(sector+sector_offset, 512, buf2);
  36   1         sector_offset++;
  37   1         AMBERLED=OFF;
  38   1         do
  39   1        {      
  40   2           do
  41   2           {
  42   3              if(DATA_REQ==0)
  43   3              {
  44   4                 GREENLED=ON;
  45   4                 BIT_EN=1;
  46   4                 SPI_Transfer(buf1[index1], &temp8);
  47   4               GREENLED=OFF;
  48   4               index1++;
  49   4                 if(index1>511)
  50   4                 {
  51   5                    if(index2>511)
  52   5                    {
  53   6                        BIT_EN=0;              
  54   6                        AMBERLED=ON;
  55   6                index2=0;
C51 COMPILER V9.53.0.0   PLAY_SONG                                                         12/15/2015 10:00:52 PAGE 2   

  56   6                
  57   6                Read_Sector(sector+sector_offset, 512, buf2);
  58   6                sector_offset++;
  59   6                        AMBERLED=OFF;
  60   6                    }
  61   5                    buffer1=0;
  62   5                    buffer2=1;
  63   5      
  64   5                }
  65   4             }
  66   3             else
  67   3             {
  68   4                if(index2>511)
  69   4                {
  70   5                    BIT_EN=0;
  71   5                    AMBERLED=ON;
  72   5              index2=0;
  73   5              
  74   5              Read_Sector(sector+sector_offset, 512, buf2);
  75   5              sector_offset++;
  76   5                    AMBERLED=OFF;
  77   5                }
  78   4                else
  79   4                {
  80   5                    if(index1>511)
  81   5                    {
  82   6                        buffer1=0;
  83   6                        buffer2=1;
  84   6                    }
  85   5                }
  86   4            }
  87   3         }while(buffer1==1);
  88   2         do
  89   2         {
  90   3            if(DATA_REQ==0)
  91   3            {
  92   4                REDLED=ON;
  93   4                BIT_EN=1;
  94   4                SPI_Transfer(buf2[index2], &temp8);
  95   4                REDLED=OFF;
  96   4                index2++;
  97   4                if(index2>511)
  98   4                {
  99   5                    if(index1>511)
 100   5                    {
 101   6                        BIT_EN=0; 
 102   6                        YELLOWLED=ON;
 103   6                index1=0;
 104   6                
 105   6                Read_Sector(sector+sector_offset, 512, buf1);
 106   6                sector_offset++;
 107   6                        YELLOWLED=OFF;
 108   6                    }
 109   5                    buffer2=0;
 110   5                    buffer1=1;
 111   5               
 112   5                 }
 113   4              }
 114   3              else
 115   3              {
 116   4                 if(index1>511)
 117   4                 {
C51 COMPILER V9.53.0.0   PLAY_SONG                                                         12/15/2015 10:00:52 PAGE 3   

 118   5                    BIT_EN=0; 
 119   5                    YELLOWLED=ON;
 120   5              index1=0;
 121   5              
 122   5              Read_Sector(sector+sector_offset, 512, buf1);
 123   5              sector_offset++;
 124   5                    YELLOWLED=OFF;
 125   5                 }
 126   4                 else
 127   4                 {
 128   5                     if(index2>511)
 129   5                     {
 130   6                        buffer2=0;
 131   6                        buffer1=1;
 132   6                     }
 133   5                 }
 134   4              }
 135   3            }while(buffer2==1);
 136   2        }while(sector_offset<512);
 137   1      //P3_2=OFF;
 138   1      } 
 139          //*/
 140          /*
 141          
 142          void Play_Song2(uint32_t Start_Cluster)
 143          {
 144             uint16_t index1;
 145             uint8_t buff_emp, * p_out;
 146             uint32_t sector, sector_offset;
 147          printf("Starting Cluster = %lu\n\r",Start_Cluster);
 148          sector=First_Sector(Start_Cluster);
 149          printf("Starting Sector = %lu\n\r",sector);
 150          //P3_2=ON;
 151          sector_offset=0;
 152          YELLOWLED=ON;
 153          nCS0=0;
 154          SEND_COMMAND(17,sector+sector_offset);
 155          read_block(512,buf1);
 156          index1=0;
 157          sector_offset++;
 158          nCS0=1;
 159          YELLOWLED=OFF;
 160          //AMBERLED=ON;
 161          //nCS0=0;
 162          //SEND_COMMAND(17,sector+sector_offset);
 163          //read_block(buf2,512);
 164          //sector_offset++;
 165          //nCS0=1;
 166          //AMBERLED=OFF;
 167          
 168          
 169             p_out=buf1;
 170             buff_emp=0;
 171             do
 172             {
 173                if(DATA_REQ==0)
 174                {
 175                   GREENLED=ON;
 176                   BIT_EN=1;
 177                   while((SPSTA&0x80)!=0x80);
 178                   SPDAT=*(buf1+index1);
 179                   index1++;
C51 COMPILER V9.53.0.0   PLAY_SONG                                                         12/15/2015 10:00:52 PAGE 4   

 180                   if(index1==512)
 181                   {
 182                      buff_emp|=1;           
 183                   }
 184               if(index1==1024)
 185               {
 186                  index1=0;
 187                buff_emp|=2;
 188                 }
 189                   if(index1==768)
 190                   {
 191                     BIT_EN=0;
 192                     GREENLED=OFF;
 193                     if((buff_emp & 0x01)==0x01)
 194                     {
 195                        YELLOWLED=ON;
 196                        nCS0=0;
 197                        SEND_COMMAND(17,sector+sector_offset);
 198                        read_block(512,buf1);
 199                        nCS0=1;             
 200                        YELLOWLED=OFF;
 201                        buff_emp &= 0xFE;
 202                        sector_offset++;            
 203                     }
 204                   }
 205                   if(index1==256)
 206                   {
 207                     BIT_EN=0;
 208                     GREENLED=OFF;
 209                     if((buff_emp & 0x02)==0x02)
 210                     {
 211                        AMBERLED=ON;
 212                        nCS0=0;
 213                        SEND_COMMAND(17,sector+sector_offset);
 214                        read_block(512,buf2);
 215                        nCS0=1;             
 216                        AMBERLED=OFF;
 217                        buff_emp &= 0xFD;
 218                        sector_offset++;            
 219                     }
 220                   }                        
 221                 }
 222                 else
 223                 {
 224                    GREENLED=OFF;
 225                    BIT_EN=0;
 226                    if((buff_emp & 0x01)==0x01)
 227                    {
 228                       YELLOWLED=ON;
 229                       nCS0=0;
 230                       SEND_COMMAND(17,sector+sector_offset);
 231                       read_block(512,buf1);
 232                       nCS0=1;             
 233                       YELLOWLED=OFF;
 234                       buff_emp &= 0xFE;
 235                       sector_offset++;
 236           //            print_hex(1);
 237           //            print_hex(i);
 238                      
 239                    }
 240                    else if((buff_emp & 0x02)==0x02)
 241                    {
C51 COMPILER V9.53.0.0   PLAY_SONG                                                         12/15/2015 10:00:52 PAGE 5   

 242                       AMBERLED=ON;
 243                       nCS0=0;
 244                       SEND_COMMAND(17,sector+sector_offset);
 245                       read_block(512,buf2);
 246                       nCS0=1;             
 247                       AMBERLED=OFF;
 248                       buff_emp &= 0xFD;
 249                       sector_offset++;
 250                    }
 251                 }
 252             }while(sector_offset<128);   
 253             GREENLED=1;
 254          //   P3_2=OFF;
 255            }  
 256          
 257           */  


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    728    ----
   CONSTANT SIZE    =     49    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      19
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
